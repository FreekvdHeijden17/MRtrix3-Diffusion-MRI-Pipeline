#! /bin/sh

# COMPLETE Tractography pipeline with dwi masking

set -e  # Exit on any error

export FSLDIR=$HOME/fsl
PATH=$FSLDIR/share/fsl/bin:$HOME/mrtrix/bin:$FSLDIR/bin:$HOME/ants-2.6.2/bin:$PATH
. $FSLDIR/etc/fslconf/fsl.sh

# Number of threads to use for programs that support multi-threading
# (set to 0 to disable multi-threading)
case $NTHREADS in '')
	NTHREADS=$(nproc)
esac
date
echo "Running with NTHREADS=$NTHREADS"

# Set defaults for different toolkits:
export MRTRIX_NTHREADS=$NTHREADS OMP_NUM_THREADS=$NTHREADS ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS=$NTHREADS

# Create working directory
PARTICIPANT=$1
case $PARTICIPANT in '')
	echo "Usage: $0 <sub-CC1234567>" >&2
	exit 2
esac

WORK_DIR=$HOME/data/${PARTICIPANT}_tractography_dwimask_complete

#DWI_SOURCE_DIR=$HOME/researchdrive/TSB0020 Neuroimaging_aging (Projectfolder)/Camcan/mri/pipeline/release004/BIDS_20190411/dwi/$PARTICIPANT/dwi
#ANAT_SOURCE_DIR=$HOME/researchdrive/TSB0020 Neuroimaging_aging (Projectfolder)/Camcan/mri/pipeline/release004/BIDS_20190411/anat/$PARTICIPANT/anat
DWI_SOURCE_DIR=$HOME/source/dwi
ANAT_SOURCE_DIR=$HOME/source/anat

date
echo "Creating working directory: $WORK_DIR"
mkdir -p $WORK_DIR
cd $WORK_DIR

# Create subdirectories
mkdir -p tmp out

# Copy input data
date
echo "Copying input data for $PARTICIPANT..."
cp "$DWI_SOURCE_DIR/${PARTICIPANT}_dwi.nii.gz" tmp/
cp "$DWI_SOURCE_DIR/${PARTICIPANT}_dwi.bval" tmp/
cp "$DWI_SOURCE_DIR/${PARTICIPANT}_dwi.bvec" tmp/
cp "$ANAT_SOURCE_DIR/${PARTICIPANT}_T1w.nii.gz" tmp/

date
echo "Starting COMPLETE DWI MASKING tractography pipeline for $PARTICIPANT"
echo "========================================================================="

############################### STEP 1 ###############################
#             Convert data to .mif format and denoise                #
######################################################################

date
echo "STEP 1: Converting data to .mif format and preprocessing..."

# Convert DWI data to .mif format
mrconvert tmp/${PARTICIPANT}_dwi.nii.gz tmp/dwi.mif
mrconvert tmp/dwi.mif -fslgrad tmp/${PARTICIPANT}_dwi.bvec tmp/${PARTICIPANT}_dwi.bval tmp/dwi_header.mif

# Denoise the data
date
echo "Denoising..."
/usr/bin/time -v dwidenoise tmp/dwi_header.mif tmp/dwi_den.mif -noise tmp/noise.mif

# Remove Gibbs ringing artifacts
date
echo "Removing Gibbs ringing..."
/usr/bin/time -v mrdegibbs tmp/dwi_den.mif tmp/dwi_den_unr.mif

######################################################################
# Run the dwipreproc command (wrapper for eddy and topup)           #
######################################################################

date
echo "Running dwifslpreproc (this may take 30-60 minutes)..."
/usr/bin/time -v dwifslpreproc tmp/dwi_den_unr.mif tmp/dwi_den_preproc.mif -pe_dir AP -rpe_none -readout_time 0.0342002 -eddy_options " --slm=linear --data_is_shelled --nthr=$NTHREADS "

# Extract the b0 images from the diffusion data
date
echo "Extracting b0 images..."
dwiextract tmp/dwi_den_preproc.mif - -bzero |
	mrmath - mean tmp/mean_b0_AP.mif -axis 3

mrconvert tmp/mean_b0_AP.mif tmp/mean_b0_AP.nii.gz
/usr/bin/time -v bet tmp/mean_b0_AP.nii.gz tmp/mean_b0_AP_bet.nii.gz -m -R -f 0.3
mrconvert tmp/mean_b0_AP_bet_mask.nii.gz tmp/mask_for_biascorrection.mif

# Bias field correction
date
echo "Bias field correction..."
/usr/bin/time -v dwibiascorrect fsl tmp/dwi_den_preproc.mif tmp/dwi_den_preproc_unbiased.mif -mask tmp/mask_for_biascorrection.mif -bias tmp/bias.mif

########################### STEP 2 ###################################
#                          Upsample                                  #
######################################################################

date
echo "STEP 2: Upsampling..."

# Upsample the diffusion image
/usr/bin/time -v mrgrid tmp/dwi_den_preproc_unbiased.mif regrid -vox 1.5 tmp/dwi_unbiased_upsampled.mif

########################### STEP 3 ###################################
#             Response functions with dwi mask                        #
######################################################################

date
echo "STEP 3: Estimating response functions with dwi-based mask..."

# Estimate response functions using dwi-based mask
/usr/bin/time -v dwi2response dhollander tmp/dwi_unbiased_upsampled.mif tmp/wm.txt tmp/gm.txt tmp/csf.txt -voxels tmp/voxels.mif

/usr/bin/time -v dwi2mask tmp/dwi_unbiased_upsampled.mif tmp/mask_up.mif

# Perform constrained spherical deconvolution
date
echo "Performing constrained spherical deconvolution..."
/usr/bin/time -v dwi2fod msmt_csd tmp/dwi_unbiased_upsampled.mif -mask tmp/mask_up.mif tmp/wm.txt tmp/wmfod_up.mif tmp/gm.txt tmp/gmfod_up.mif tmp/csf.txt tmp/csffod_up.mif

# Normalize the FODs
date
echo "Normalizing FODs..."
/usr/bin/time -v mtnormalise tmp/wmfod_up.mif tmp/wmfod_norm_up.mif tmp/gmfod_up.mif tmp/gmfod_norm_up.mif tmp/csffod_up.mif tmp/csffod_norm_up.mif -mask tmp/mask_up.mif

########################### STEP 4 ###################################
#                        Creating 5TT and coregistration             #
######################################################################

date
echo "STEP 4: Creating 5TT..."

# Convert anatomical to working formats
mrconvert tmp/${PARTICIPANT}_T1w.nii.gz tmp/T1.mif
mrconvert tmp/T1.mif tmp/T1.nii.gz

# Generate 5-tissue-type segmentation
date
echo "Generating 5-tissue-type segmentation..."
/usr/bin/time -v 5ttgen fsl tmp/T1.mif tmp/5tt_nocoreg.mif
mrconvert tmp/5tt_nocoreg.mif tmp/5tt_nocoreg.nii.gz

# Extract mean b0 for coregistration
dwiextract tmp/dwi_unbiased_upsampled.mif - -bzero |
	/usr/bin/time -v mrmath - mean tmp/mean_b0_processed_up.mif -axis 3
mrconvert tmp/mean_b0_processed_up.mif tmp/mean_b0_processed_up.nii.gz

# STEP 2B: Coregister T1 to DWI space
date
echo "Coregistering T1 to DWI space..."
/usr/bin/time -v fslroi tmp/5tt_nocoreg.nii.gz tmp/5tt_vol0.nii.gz 0 1
/usr/bin/time -v flirt -in tmp/mean_b0_processed_up.nii.gz -ref tmp/5tt_vol0.nii.gz -interp nearestneighbour -dof 6 -omat tmp/diff2struct_fsl_up.mat

# Also create coregistration for other transforms
/usr/bin/time -v transformconvert tmp/diff2struct_fsl_up.mat tmp/mean_b0_processed_up.nii.gz tmp/5tt_nocoreg.nii.gz flirt_import tmp/diff2struct_mrtrix_up.txt
/usr/bin/time -v mrtransform tmp/5tt_nocoreg.mif -linear tmp/diff2struct_mrtrix_up.txt -inverse tmp/5tt_coreg_up.mif

# Create a seed region along the GM/WM boundary
date
echo "Creating GM/WM boundary seed region..."
/usr/bin/time -v 5tt2gmwmi tmp/5tt_coreg_up.mif tmp/gmwmSeed_coreg_up.mif

########################## STEP 5 ###################################
#                 Run the streamline analysis                        #
######################################################################

date
echo "STEP 5: Generating streamlines (this may take 1-2 hours)..."

# Generate 10 million tracks
date
echo "Generating 10 million streamlines..."
/usr/bin/time -v tckgen -act tmp/5tt_coreg_up.mif -backtrack -seed_gmwmi tmp/gmwmSeed_coreg_up.mif -maxlength 250 -cutoff 0.06 -select 10000k tmp/wmfod_norm_up.mif tmp/tracks_10M_up.tck

# SIFT2 filtering
date
echo "Running SIFT2 filtering..."
/usr/bin/time -v tcksift2 -act tmp/5tt_coreg_up.mif -out_mu tmp/sift_mu_up.txt -out_coeffs tmp/sift_coeffs_up.txt tmp/tracks_10M_up.tck tmp/wmfod_norm_up.mif tmp/sift_1M_up.txt

########################## STEP 6 ###################################
#                 Creating the connectome                            #
######################################################################

date
echo "STEP 6: Creating connectomes..."

# Skull strip T1 (use existing brain extraction)
/usr/bin/time -v bet tmp/T1.nii.gz tmp/skullstripped_T1w.nii.gz -R -f 0.3

# Register to MNI space
date
echo "Registering to MNI space..."
/usr/bin/time -v antsRegistrationSyN.sh -d 3 -f $FSLDIR/data/standard/MNI152_T1_1mm_brain.nii.gz -m tmp/skullstripped_T1w.nii.gz -o tmp/T1_to_MNI

# Transform atlases to subject space
date
echo "Transforming atlases to subject space..."
/usr/bin/time -v antsApplyTransforms -d 3 -i $HOME/data/Gordon_Parcels.nii -r tmp/skullstripped_T1w.nii.gz -o tmp/Gordon_Parcels_T1w_space.nii.gz -n NearestNeighbor -t tmp/T1_to_MNI1InverseWarp.nii.gz -t [tmp/T1_to_MNI0GenericAffine.mat,1] -v
/usr/bin/time -v antsApplyTransforms -d 3 -i $HOME/data/BN_Atlas.nii -r tmp/skullstripped_T1w.nii.gz -o tmp/BN_Atlas_T1w_space.nii.gz -n NearestNeighbor -t tmp/T1_to_MNI1InverseWarp.nii.gz -t [tmp/T1_to_MNI0GenericAffine.mat,1] -v
/usr/bin/time -v antsApplyTransforms -d 3 -i $HOME/data/MNI_Glasser_HCP_v1.0_afni.nii -r tmp/skullstripped_T1w.nii.gz -o tmp/Glasser_Parcels_T1w_space.nii.gz -n NearestNeighbor -t tmp/T1_to_MNI1InverseWarp.nii.gz -t [tmp/T1_to_MNI0GenericAffine.mat,1] -v
/usr/bin/time -v antsApplyTransforms -d 3 -i $HOME/data/ROIs_300inVol_MNI.nii -r tmp/skullstripped_T1w.nii.gz -o tmp/Seitzman_Parcels_T1w_space.nii.gz -n NearestNeighbor -t tmp/T1_to_MNI1InverseWarp.nii.gz -t [tmp/T1_to_MNI0GenericAffine.mat,1] -v

# Transform atlases to DWI space
date
echo "Transforming atlases to DWI space..."
/usr/bin/time -v mrtransform tmp/Gordon_Parcels_T1w_space.nii.gz -linear tmp/diff2struct_mrtrix_up.txt -inverse tmp/Gordon_Parcels_DWI_space.nii.gz
/usr/bin/time -v mrtransform tmp/BN_Atlas_T1w_space.nii.gz -linear tmp/diff2struct_mrtrix_up.txt -inverse tmp/BN_Atlas_DWI_space.nii.gz
/usr/bin/time -v mrtransform tmp/Glasser_Parcels_T1w_space.nii.gz -linear tmp/diff2struct_mrtrix_up.txt -inverse tmp/Glasser_Parcels_DWI_space.nii.gz
/usr/bin/time -v mrtransform tmp/Seitzman_Parcels_T1w_space.nii.gz -linear tmp/diff2struct_mrtrix_up.txt -inverse tmp/Seitzman_Parcels_DWI_space.nii.gz

# Upsample atlases to match upsampled DWI
date
echo "Upsampling atlases to match DWI resolution..."
/usr/bin/time -v mrgrid tmp/Gordon_Parcels_DWI_space.nii.gz regrid -vox 1.5 tmp/Gordon_Parcels_DWI_upsampled.nii.gz -interp nearest
/usr/bin/time -v mrgrid tmp/BN_Atlas_DWI_space.nii.gz regrid -vox 1.5 tmp/BN_Atlas_DWI_upsampled.nii.gz -interp nearest
/usr/bin/time -v mrgrid tmp/Glasser_Parcels_DWI_space.nii.gz regrid -vox 1.5 tmp/Glasser_Parcels_DWI_upsampled.nii.gz -interp nearest
/usr/bin/time -v mrgrid tmp/Seitzman_Parcels_DWI_space.nii.gz regrid -vox 1.5 tmp/Seitzman_Parcels_DWI_upsampled.nii.gz -interp nearest

# Create connectomes using upsampled atlases with DWI masking
date
echo "Creating connectome matrices with T1-based masking..."
/usr/bin/time -v tck2connectome -assignment_radial_search 4 -symmetric -zero_diagonal -scale_invnodevol -tck_weights_in tmp/sift_1M_up.txt tmp/tracks_10M_up.tck tmp/Gordon_Parcels_DWI_upsampled.nii.gz out/Gordon_parcels_DWImask.txt -out_assignment out/assignments_gordon_DWImask.csv
/usr/bin/time -v tck2connectome -assignment_radial_search 4 -symmetric -zero_diagonal -scale_invnodevol -tck_weights_in tmp/sift_1M_up.txt tmp/tracks_10M_up.tck tmp/BN_Atlas_DWI_upsampled.nii.gz out/BN_Atlas_DWImask.txt -out_assignment out/assignments_BN_DWImask.csv
/usr/bin/time -v tck2connectome -assignment_radial_search 4 -symmetric -zero_diagonal -scale_invnodevol -tck_weights_in tmp/sift_1M_up.txt tmp/tracks_10M_up.tck tmp/Glasser_Parcels_DWI_upsampled.nii.gz out/Glasser_parcels_DWImask.txt -out_assignment out/assignments_glasser_DWImask.csv
/usr/bin/time -v tck2connectome -assignment_radial_search 4 -symmetric -zero_diagonal -scale_invnodevol -tck_weights_in tmp/sift_1M_up.txt tmp/tracks_10M_up.tck tmp/Seitzman_Parcels_DWI_upsampled.nii.gz out/Seitzman_parcels_DWImask.txt -out_assignment out/assignments_Seitzman_DWImask.csv

echo "========================================================================="
date
echo "COMPLETE TRACTOGRAPHY PIPELINE COMPLETED!"
echo "Results are in: $WORK_DIR"
echo ""
echo "CONNECTOME MATRICES:"
echo "  - Gordon: tmp/Gordon_parcels_DWImask.txt"
echo "  - BN Atlas: tmp/BN_Atlas_DWImask.txt"
echo "  - Glasser: tmp/Glasser_parcels_DWImask.txt"
echo "  - Seitzman: tmp/Seitzman_parcels_DWImask.txt"
